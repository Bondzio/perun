---
# A list of Perun roles that are loaded to the database
perun_roles:
  - PERUNADMIN
  - PERUNOBSERVER
  - VOADMIN
  - GROUPADMIN
  - SELF
  - FACILITYADMIN
  - RESOURCEADMIN
  - RESOURCESELFSERVICE
  - REGISTRAR
  - ENGINE
  - RPC
  - NOTIFICATIONS
  - SERVICEUSER
  - SPONSOR
  - VOOBSERVER
  - TOPGROUPCREATOR
  - SECURITYADMIN
  - CABINETADMIN
  - UNKNOWN

# A list of Perun policies that are loaded to the PerunPoliciesContainer.
#
# Name of each policy starts with method name (usually), continues with parameter's types (except PerunSession)
# and ends with "policy". Between each of these parts are underscores.
# In scenarios where one method needs more policies, or there are conflicts between policy names,
# optional word with a dash at the end can be used before the method name.
# Example: filter-getAllMembers_Group_policy
#
# Each policy is composed of two parts.
# The first one is called policy_roles, which contains privileged roles for this policy.
# The second one is include_policies which contains policies which add their policy_roles to this policy.
#
# The policy_roles is a list of maps, where the relation between list entries is logical OR
# and the relation between map entries is logical AND.
# Each map element contains role name as a key and object type as a value (value is optional).
# This specifies that a particular role has privileges in the policy with a connection to the type of object.
# The actual object (or objects) is then passed in the code where the evaluation is called.
# When there are passed more objects with the specified type, the principal has to have assigned a role to all of them.
# When there are provided no objects of the specified type, this "role: object type" entry will not be satisfied.
# Example: policy_roles:
#            - VOADMIN: Vo
#            - GROUPADMIN: Group
#              RESOURCEADMIN: Resource
#            - PERUNOBESRVER:
#
# Explanation: The list contains 3 elements. The first element contains a map with one entry,
# the second one with two, and the last one with one. It is enough to satisfy just one element in the list.
# The first map contains one entry where the key is VOADMIN, and the object type is Vo.
# Meaning that to satisfy this entry, the principal has to have role VOADMIN connected with object type Vo,
# where the actual object is passed in the code.
# The second map contains two entries, therefore to satisfy this map, the principal has to be GROUPADMIN on a group
# and RESOURCEADMIN on a resource.
# The last map contains one entry specifying that the principal has to have role PERUNOBSERVER
# but without the connection with any object.
#
# The include_policies is a list of policy names that will be included in the policy.
# Relation between the policy and its included policies is logical OR.
# Meaning that to satisfy the policy, it is enough to either satisfy policy_roles in the policy
# or to satisfy policy_roles for at least one of the included policies.
# Most of the policies are including default_policy, which contains PERUNADMIN's privileges.
# Example: include_policies:
#            - default_policy
#            - getAllVos_policy
#
perun_policies:

  default_policy:
    policy_roles:
      - PERUNADMIN:
    include_policies: []

  test_resourceselfservice:
    policy_roles:
      - RESOURCESELFSERVICE: Resource
        GROUPADMIN: Group
    include_policies: []

  test_sponsor:
    policy_roles:
      - SPONSOR: Vo
    include_policies: []

  test_cabinet:
    policy_roles:
      - CABINETADMIN:
    include_policies: []

  test_self:
    policy_roles:
      - SELF: User
    include_policies: []

  test_voobserver_and_topgroupcreator:
    policy_roles:
      - VOOBSERVER: Vo
        TOPGROUPCREATOR:
    include_policies: []

  test_security_admin:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
    include_policies: []

  test_group_or_vo:
    policy_roles:
      - GROUPADMIN: Group
      - VOADMIN: Vo
    include_policies: []

  test_resource_admin:
    policy_roles:
      - RESOURCEADMIN: Resource
    include_policies: []

  test_resource_and_facility_admin:
    policy_roles:
      - RESOURCEADMIN: Resource
        FACILITYADMIN: Facility
    include_policies: []

  test_authorized_vo_admin:
    policy_roles:
      - VOADMIN: Vo
    include_policies: []

  test_groupadmin_voadmin:
    policy_roles:
      - VOADMIN: Vo
        GROUPADMIN: Group
    include_policies: []

  test_cycle_voadmin:
    policy_roles:
      - VOADMIN: Vo
    include_policies:
      - test_cycle_admin

  test_cycle_admin:
    policy_roles:
      - PERUNADMIN:
    include_policies:
      - test_cycle_voadmin

  test_authorized_group_admin:
    policy_roles:
      - GROUPADMIN: Group
    include_policies:
      - test_authorized_vo_admin

  test_transitive_one:
    policy_roles:
      - PERUNADMIN:
    include_policies:
      - test_transitive_two

  test_transitive_two:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - test_transitive_three

  test_transitive_three:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - test_resource_admin

  #DatabaseManagerEntry
  getCurrentDatabaseVersion_policy:
    policy_roles:
      - SELF:
    include_policies:
      - default_policy

  getDatabaseDriverInformation_policy:
    policy_roles:
      - SELF:
    include_policies:
      - default_policy

  getDatabaseInformation_policy:
    policy_roles:
      - SELF:
    include_policies:
      - default_policy

  getTimeOfQueryPerformance_policy:
    policy_roles:
      - SELF:
    include_policies:
      - default_policy

  #ExtSourcesManagerEntry
  createExtSource_ExtSource_Map<String_String>_policy:
    policy_roles: []
    include_policies:
      - default_policy

  deleteExtSource_ExtSource_policy:
    policy_roles: []
    include_policies:
      - default_policy

  getExtSourceById_int_policy:
    policy_roles:
      - RPC:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getExtSourceByName_String_policy:
    policy_roles:
      - RPC:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getVoExtSources_Vo_policy:
    policy_roles:
      - VOADMIN: Vo
      - VOOBSERVER: Vo
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getGroupExtSources_Group_policy:
    policy_roles:
      - VOADMIN: Vo
      - VOOBSERVER: Vo
      - GROUPADMIN: Group
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getExtSources_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  addExtSource_Vo_ExtSource_policy:
    policy_roles: []
    include_policies:
      - default_policy

  addExtSource_Group_ExtSource_policy:
    policy_roles:
      - VOADMIN: Vo
    include_policies:
      - default_policy

  removeExtSource_Vo_ExtSource_policy:
    policy_roles: []
    include_policies:
      - default_policy

  removeExtSource_Group_ExtSource_policy:
    policy_roles:
      - VOADMIN: Vo
    include_policies:
      - default_policy

  getInvalidUsers_ExtSource_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  loadExtSourcesDefinitions_policy:
    policy_roles: []
    include_policies:
      - default_policy

  getCandidate_ExtSource_String_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getCandidate_Map<String_String>_ExtSource_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getAttributes_ExtSource_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  #OwnersManagerEntry
  createOwner_Owner_policy:
    policy_roles: []
    include_policies:
      - default_policy

  deleteOwner_Owner_policy:
    policy_roles: []
    include_policies:
      - default_policy

  deleteOwner_Owner_boolean_policy:
    policy_roles: []
    include_policies:
      - default_policy

  getOwnerById_int_policy:
    policy_roles:
      - SELF:
      - VOADMIN:
      - VOOBSERVER:
      - GROUPADMIN:
      - FACILITYADMIN:
      - RPC:
    include_policies:
      - default_policy

  getOwners_policy:
    policy_roles:
      - SELF:
      - VOADMIN:
      - VOOBSERVER:
      - GROUPADMIN:
      - FACILITYADMIN:
      - ENGINE:
    include_policies:
      - default_policy

  #SearcherEntry
  getUsers_Map<String_String>_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getMembersByUserAttributes_Vo_Map<String_String>_policy:
    policy_roles:
      - VOADMIN: Vo
      - VOOBSERVER: Vo
      - GROUPADMIN: Vo
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getUsersForCoreAttributes_Map<String_String>_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getMembersByExpiration_String_int_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getMembersByExpiration_String_LocalDate_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getFacilities_Map<String_String>_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getResources_Map<String_String>_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getMembersByGroupExpiration_Group_String_LocalDate_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  #SecurityTeamsManagerEntry
  getSecurityTeams_policy:
    policy_roles:
      - SECURITYADMIN:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  filter-getSecurityTeams_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getAllSecurityTeams_policy:
    policy_roles:
      - FACILITYADMIN:
      - SECURITYADMIN:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  createSecurityTeam_SecurityTeam_policy:
    policy_roles:
      - SECURITYADMIN:
    include_policies:
      - default_policy

  updateSecurityTeam_SecurityTeam_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
    include_policies:
      - default_policy

  deleteSecurityTeam_SecurityTeam__boolean_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
    include_policies:
      - default_policy

  getSecurityTeamById_int_policy:
    policy_roles:
      - RPC:
      - FACILITYADMIN:
      - SECURITYADMIN:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getSecurityTeamByName_String_policy:
    policy_roles:
      - RPC:
      - FACILITYADMIN:
      - SECURITYADMIN:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getAdmins_SecurityTeam_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getAdminGroups_SecurityTeam_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  addAdmin_SecurityTeam_User_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
    include_policies:
      - default_policy

  addAdmin_SecurityTeam_Group_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
    include_policies:
      - default_policy

  removeAdmin_SecurityTeam_User_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
    include_policies:
      - default_policy

  removeAdmin_SecurityTeam_Group_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
    include_policies:
      - default_policy

  addUserToBlacklist_SecurityTeam_User_String_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
    include_policies:
      - default_policy

  removeUserFromBlacklist_SecurityTeam_User_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
    include_policies:
      - default_policy

  getBlacklist_SecurityTeam_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getBlacklist_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getBlacklistWithDescription_SecurityTeam_policy:
    policy_roles:
      - SECURITYADMIN: SecurityTeam
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getBlacklistWithDescription_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  #ServicesManagerEntry
  blockServiceOnFacility_Service_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  blockServiceOnDestination_Service_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  blockAllServicesOnFacility_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  blockAllServicesOnDestination_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  getServicesBlockedOnFacility_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getServicesBlockedOnDestination_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  isServiceBlockedOnFacility_Service_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  isServiceBlockedOnDestination_Service_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  unblockAllServicesOnDestination_String_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  unblockAllServicesOnDestination_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  unblockServiceOnFacility_Service_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  unblockServiceOnDestination_Service_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  forceServicePropagation_Facility_Service_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - ENGINE:
    include_policies:
      - default_policy

  forceServicePropagation_Service_policy:
    policy_roles:
      - FACILITYADMIN:
      - ENGINE:
    include_policies:
      - default_policy

  planServicePropagation_Facility_Service_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - ENGINE:
    include_policies:
      - default_policy

  planServicePropagation_Service_policy:
    policy_roles:
      - FACILITYADMIN:
      - ENGINE:
    include_policies:
      - default_policy

  getFacilityAssignedServicesForGUI_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  createService_Service_policy:
    policy_roles: []
    include_policies:
      - default_policy

  deleteService_Service_policy:
    policy_roles: []
    include_policies:
      - default_policy

  updateService_Service_policy:
    policy_roles: []
    include_policies:
      - default_policy

  getServiceById_int_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - ENGINE:
      - RPC:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getServiceByName_String_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - ENGINE:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getServices_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - FACILITYADMIN:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getServicesByAttributeDefinition_AttributeDefinition_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getAssignedResources_Service_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - ENGINE:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  filter-getAssignedResources_Service_policy:
    policy_roles:
      - VOADMIN: Vo
      - VOOBSERVER: Vo
      - ENGINE:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getHierarchicalData_Service_Facility_boolean_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - ENGINE:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getFlatData_Service_Facility_boolean_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - ENGINE:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getDataWithGroups_Service_Facility_boolean_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - ENGINE:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getDataWithVos_Service_Facility_boolean_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - ENGINE:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getServicesPackages_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getServicesPackageById_int_policy:
    policy_roles:
      - RPC:
      - VOADMIN:
      - VOOBSERVER:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getServicesPackageByName_String_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  createServicesPackage_ServicesPackage_policy:
    policy_roles: []
    include_policies:
      - default_policy

  updateServicesPackage_ServicesPackage_policy:
    policy_roles: []
    include_policies:
      - default_policy

  deleteServicesPackage_ServicesPackage_policy:
    policy_roles: []
    include_policies:
      - default_policy

  addServiceToServicesPackage_ServicesPackage_Service_policy:
    policy_roles: []
    include_policies:
      - default_policy

  removeServiceFromServicesPackage_ServicesPackage_Service_policy:
    policy_roles: []
    include_policies:
      - default_policy

  getServicesFromServicesPackage_ServicesPackage_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  addRequiredAttribute_Service_AttributeDefinition_policy:
    policy_roles: []
    include_policies:
      - default_policy

  addRequiredAttributes_Service_List<AttributeDefinition>_policy:
    policy_roles: []
    include_policies:
      - default_policy

  removeRequiredAttribute_Service_AttributeDefinition_policy:
    policy_roles: []
    include_policies:
      - default_policy

  removeRequiredAttributes_Service_List<AttributeDefinition>_policy:
    policy_roles: []
    include_policies:
      - default_policy

  removeAllRequiredAttributes_Service_policy:
    policy_roles: []
    include_policies:
      - default_policy

  addDestination_List<Service>_Facility_Destination_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  addDestination_Service_Facility_Destination_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  removeDestination_Service_Facility_Destination_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  getDestinationById_int_policy:
    policy_roles:
      - PERUNOBSERVER:
      - ENGINE:
      - FACILITYADMIN:
    include_policies:
      - default_policy

  getDestinations_Service_Facility_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - PERUNOBSERVER:
      - ENGINE:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  getDestinations_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getAllRichDestinations_Facility_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - PERUNOBSERVER:
      - ENGINE:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  getAllRichDestinations_Service_policy:
    policy_roles:
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getRichDestinations_Facility_Service_policy:
    policy_roles:
      - VOADMIN:
      - VOOBSERVER:
      - PERUNOBSERVER:
      - ENGINE:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  removeAllDestinations_Service_Facility_policy:
    policy_roles: []
    include_policies:
      - default_policy

  getAssignedServices_Facility_policy:
    policy_roles:
      - PERUNOBSERVER:
      - ENGINE:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  addDestinationsForAllServicesOnFacility_Facility_Destination_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  addDestinationsDefinedByHostsOnFacility_Service_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  addDestinationsDefinedByHostsOnFacility_List<Services>_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  addDestinationsDefinedByHostsOnFacility_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy

  #TasksManagerEntry
  getTask_Service_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getTaskById_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  listAllTasksForFacility_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  isThereSuchTask_Service_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getTask_int_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getTaskResultsByTask_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getTaskResultsForGUIByTaskOnlyNewest_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getTaskResultsForGUIByTaskAndDestination_int_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getTaskResultsForGUIByTask_int_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getFacilityState_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
      - ENGINE:
    include_policies:
      - default_policy

  getAllFacilitiesStatesForVo_Vo_policy:
    policy_roles:
      - VOADMIN: Vo
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getResourcesState_Vo_policy:
    policy_roles:
      - VOADMIN: Vo
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  getFacilityServicesState_Facility_policy:
    policy_roles:
      - FACILITYADMIN: Facility
      - PERUNOBSERVER:
    include_policies:
      - default_policy

  deleteTask_Task_policy:
    policy_roles:
      - FACILITYADMIN: Facility
    include_policies:
      - default_policy
...