#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Perun::Agent;
use Perun::Common qw(printMessage);

sub help {
	return qq{
	Deletes an facility. Facility id or facility name is required.
	--------------------------------------------------------------
	Available options:
	--facilityId   | -f facility id
	--facilityName | -F facility name
	--force        | -o forcefully deletes facility
	--batch        | -b batch
	--help         | -h prints this help

	};
}

my ($facilityId, $facilityName, $force, $batch);
GetOptions ("help|h"   => sub {
		print help();
		exit 0;
	}, "batch|b"       => \$batch,
	"facilityId|f=i"   => \$facilityId,
	"facilityName|F=s" => \$facilityName,
	"force|o"        => \$force) || die help();

# Check options
unless (defined($facilityId) or (defined($facilityName))) { die "ERROR: facilityId or facilityName is required \n";}

my $agent = Perun::Agent->new();
my $facilitiesAgent = $agent->getFacilitiesAgent;

unless ($facilityId) {
	my $facility = $facilitiesAgent->getFacilityByName( name => $facilityName );
	$facilityId = $facility->getId;
}

if (defined($force)) {
	my $forcevalue = 1;
	$facilitiesAgent->deleteFacility( facility => $facilityId , force => $forcevalue);
} else {
	$facilitiesAgent->deleteFacility( facility => $facilityId );
}

printMessage("Facility Id:$facilityId successfully deleted", $batch);

